{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/aportante/": {
            "get": {
                "tags": [
                    "aportante"
                ],
                "description": "get Aportante",
                "operationId": "AportanteController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Aportante"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "aportante"
                ],
                "description": "create Aportante",
                "operationId": "AportanteController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Aportante content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Aportante"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Aportante"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/aportante/{id}": {
            "get": {
                "tags": [
                    "aportante"
                ],
                "description": "get Aportante by id",
                "operationId": "AportanteController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Aportante"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "aportante"
                ],
                "description": "update the Aportante",
                "operationId": "AportanteController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Aportante content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Aportante"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Aportante"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "aportante"
                ],
                "description": "delete the Aportante",
                "operationId": "AportanteController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/beneficiarios/": {
            "get": {
                "tags": [
                    "beneficiarios"
                ],
                "description": "get Beneficiarios",
                "operationId": "BeneficiariosController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Beneficiarios"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "beneficiarios"
                ],
                "description": "create Beneficiarios",
                "operationId": "BeneficiariosController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Beneficiarios content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Beneficiarios"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Beneficiarios"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/beneficiarios/{id}": {
            "get": {
                "tags": [
                    "beneficiarios"
                ],
                "description": "get Beneficiarios by id",
                "operationId": "BeneficiariosController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Beneficiarios"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "beneficiarios"
                ],
                "description": "update the Beneficiarios",
                "operationId": "BeneficiariosController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Beneficiarios content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Beneficiarios"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Beneficiarios"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "beneficiarios"
                ],
                "description": "delete the Beneficiarios",
                "operationId": "BeneficiariosController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/detalle_novedad_seguridad_social/": {
            "get": {
                "tags": [
                    "detalle_novedad_seguridad_social"
                ],
                "description": "get DetalleNovedadSeguridadSocial",
                "operationId": "DetalleNovedadSeguridadSocialController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DetalleNovedadSeguridadSocial"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "detalle_novedad_seguridad_social"
                ],
                "description": "create DetalleNovedadSeguridadSocial",
                "operationId": "DetalleNovedadSeguridadSocialController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DetalleNovedadSeguridadSocial content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DetalleNovedadSeguridadSocial"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.DetalleNovedadSeguridadSocial"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/detalle_novedad_seguridad_social/tr_registrar_detalle": {
            "post": {
                "tags": [
                    "detalle_novedad_seguridad_social"
                ],
                "description": "create TrRegistrarDetalle",
                "operationId": "DetalleNovedadSeguridadSocialController.TrRegistrarDetalle",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DetalleNovedadSeguridadSocial content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/.interface{}"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Alert"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/detalle_novedad_seguridad_social/{id}": {
            "get": {
                "tags": [
                    "detalle_novedad_seguridad_social"
                ],
                "description": "get DetalleNovedadSeguridadSocial by id",
                "operationId": "DetalleNovedadSeguridadSocialController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DetalleNovedadSeguridadSocial"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "detalle_novedad_seguridad_social"
                ],
                "description": "update the DetalleNovedadSeguridadSocial",
                "operationId": "DetalleNovedadSeguridadSocialController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DetalleNovedadSeguridadSocial content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DetalleNovedadSeguridadSocial"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DetalleNovedadSeguridadSocial"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "detalle_novedad_seguridad_social"
                ],
                "description": "delete the DetalleNovedadSeguridadSocial",
                "operationId": "DetalleNovedadSeguridadSocialController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/estado_seguridad_social/": {
            "get": {
                "tags": [
                    "estado_seguridad_social"
                ],
                "description": "get EstadoSeguridadSocial",
                "operationId": "EstadoSeguridadSocialController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoSeguridadSocial"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "estado_seguridad_social"
                ],
                "description": "create EstadoSeguridadSocial",
                "operationId": "EstadoSeguridadSocialController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoSeguridadSocial content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoSeguridadSocial"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstadoSeguridadSocial"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/estado_seguridad_social/{id}": {
            "get": {
                "tags": [
                    "estado_seguridad_social"
                ],
                "description": "get EstadoSeguridadSocial by id",
                "operationId": "EstadoSeguridadSocialController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoSeguridadSocial"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "estado_seguridad_social"
                ],
                "description": "update the EstadoSeguridadSocial",
                "operationId": "EstadoSeguridadSocialController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoSeguridadSocial content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoSeguridadSocial"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoSeguridadSocial"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estado_seguridad_social"
                ],
                "description": "delete the EstadoSeguridadSocial",
                "operationId": "EstadoSeguridadSocialController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/pago/": {
            "get": {
                "tags": [
                    "pago"
                ],
                "description": "get Pago",
                "operationId": "PagoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Pago"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "pago"
                ],
                "description": "create Pago",
                "operationId": "PagoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Pago content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Pago"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Pago"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/pago/PagosPorPeriodoPago": {
            "get": {
                "tags": [
                    "pago"
                ],
                "description": "lista pagos agrupados por detalle liquidacion que corresponda a un periodo de pago.",
                "operationId": "PagoController.PagosPorPeriodoPago",
                "parameters": [
                    {
                        "in": "query",
                        "name": "idPeriodoPago",
                        "description": "id de periodo pago",
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Alert"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/pago/{id}": {
            "get": {
                "tags": [
                    "pago"
                ],
                "description": "get Pago by id",
                "operationId": "PagoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Pago"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "pago"
                ],
                "description": "update the Pago",
                "operationId": "PagoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Pago content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Pago"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Pago"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "pago"
                ],
                "description": "delete the Pago",
                "operationId": "PagoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/pagoGetPagos/{idPeriodoPago}": {
            "get": {
                "tags": [
                    "pago"
                ],
                "description": "trae los pagos de seguridad de un periodo pago",
                "operationId": "PagoController.Get Pagos",
                "parameters": [
                    {
                        "in": "id",
                        "name": "idPeriodoPago",
                        "description": "correspondiente",
                        "schema": {
                            "$ref": "#/definitions/.del"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/.PruebaPago"
                        }
                    },
                    "403": {
                        "description": ":idPeriodoPago is empty"
                    }
                }
            }
        },
        "/periodo_pago/": {
            "get": {
                "tags": [
                    "periodo_pago"
                ],
                "description": "get PeriodoPago",
                "operationId": "PeriodoPagoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.PeriodoPago"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "periodo_pago"
                ],
                "description": "create PeriodoPago",
                "operationId": "PeriodoPagoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for PeriodoPago content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PeriodoPago"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.PeriodoPago"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/periodo_pago/{id}": {
            "get": {
                "tags": [
                    "periodo_pago"
                ],
                "description": "get PeriodoPago by id",
                "operationId": "PeriodoPagoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.PeriodoPago"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "periodo_pago"
                ],
                "description": "update the PeriodoPago",
                "operationId": "PeriodoPagoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for PeriodoPago content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PeriodoPago"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.PeriodoPago"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "periodo_pago"
                ],
                "description": "delete the PeriodoPago",
                "operationId": "PeriodoPagoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/rango_edad_upc/": {
            "get": {
                "tags": [
                    "rango_edad_upc"
                ],
                "description": "get RangoEdadUpc",
                "operationId": "RangoEdadUpcController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RangoEdadUpc"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "rango_edad_upc"
                ],
                "description": "create RangoEdadUpc",
                "operationId": "RangoEdadUpcController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RangoEdadUpc content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RangoEdadUpc"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.RangoEdadUpc"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/rango_edad_upc/{id}": {
            "get": {
                "tags": [
                    "rango_edad_upc"
                ],
                "description": "get RangoEdadUpc by id",
                "operationId": "RangoEdadUpcController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RangoEdadUpc"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "rango_edad_upc"
                ],
                "description": "update the RangoEdadUpc",
                "operationId": "RangoEdadUpcController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for RangoEdadUpc content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RangoEdadUpc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.RangoEdadUpc"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "rango_edad_upc"
                ],
                "description": "delete the RangoEdadUpc",
                "operationId": "RangoEdadUpcController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/tipo_novedad_seguridad_social/": {
            "get": {
                "tags": [
                    "tipo_novedad_seguridad_social"
                ],
                "description": "get TipoNovedadSeguridadSocial",
                "operationId": "TipoNovedadSeguridadSocialController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoNovedadSeguridadSocial"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "tipo_novedad_seguridad_social"
                ],
                "description": "create TipoNovedadSeguridadSocial",
                "operationId": "TipoNovedadSeguridadSocialController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoNovedadSeguridadSocial content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoNovedadSeguridadSocial"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoNovedadSeguridadSocial"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/tipo_novedad_seguridad_social/{id}": {
            "get": {
                "tags": [
                    "tipo_novedad_seguridad_social"
                ],
                "description": "get TipoNovedadSeguridadSocial by id",
                "operationId": "TipoNovedadSeguridadSocialController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoNovedadSeguridadSocial"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_novedad_seguridad_social"
                ],
                "description": "update the TipoNovedadSeguridadSocial",
                "operationId": "TipoNovedadSeguridadSocialController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoNovedadSeguridadSocial content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoNovedadSeguridadSocial"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoNovedadSeguridadSocial"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_novedad_seguridad_social"
                ],
                "description": "delete the TipoNovedadSeguridadSocial",
                "operationId": "TipoNovedadSeguridadSocialController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/tipo_pago/": {
            "get": {
                "tags": [
                    "tipo_pago"
                ],
                "description": "get TipoPago",
                "operationId": "TipoPagoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoPago"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "tipo_pago"
                ],
                "description": "create TipoPago",
                "operationId": "TipoPagoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoPago content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoPago"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoPago"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/tipo_pago/{id}": {
            "get": {
                "tags": [
                    "tipo_pago"
                ],
                "description": "get TipoPago by id",
                "operationId": "TipoPagoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoPago"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_pago"
                ],
                "description": "update the TipoPago",
                "operationId": "TipoPagoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoPago content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoPago"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoPago"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_pago"
                ],
                "description": "delete the TipoPago",
                "operationId": "TipoPagoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/tipo_upc/": {
            "get": {
                "tags": [
                    "tipo_upc"
                ],
                "description": "get TipoUpc",
                "operationId": "TipoUpcController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoUpc"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "tipo_upc"
                ],
                "description": "create TipoUpc",
                "operationId": "TipoUpcController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoUpc content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoUpc"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoUpc"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/tipo_upc/registrar_valores": {
            "post": {
                "tags": [
                    "tipo_upc"
                ],
                "description": "RegistrarTipo the TipoUpc",
                "operationId": "TipoUpcController.RegistrarTipo",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "RegistrarTipo",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} RegistrarTipo success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/tipo_upc/{id}": {
            "get": {
                "tags": [
                    "tipo_upc"
                ],
                "description": "get TipoUpc by id",
                "operationId": "TipoUpcController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoUpc"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_upc"
                ],
                "description": "update the TipoUpc",
                "operationId": "TipoUpcController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoUpc content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoUpc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoUpc"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_upc"
                ],
                "description": "delete the TipoUpc",
                "operationId": "TipoUpcController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/tr_periodo_pago/": {
            "post": {
                "tags": [
                    "tr_periodo_pago"
                ],
                "description": "Registra los pagos asociados a un nuevo periodo_pago",
                "operationId": "TrPeriodoPagoController.TrPeriodoPago",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TrPeriodoPago content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TrPeriodoPago"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/.msg"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            }
        },
        "/upc_adicional/": {
            "get": {
                "tags": [
                    "upc_adicional"
                ],
                "description": "get UpcAdicional",
                "operationId": "UpcAdicionalController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.UpcAdicional"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "upc_adicional"
                ],
                "description": "create UpcAdicional",
                "operationId": "UpcAdicionalController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for UpcAdicional content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpcAdicional"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.UpcAdicional"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/upc_adicional/{id}": {
            "get": {
                "tags": [
                    "upc_adicional"
                ],
                "description": "get UpcAdicional by id",
                "operationId": "UpcAdicionalController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.UpcAdicional"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "upc_adicional"
                ],
                "description": "update the UpcAdicional",
                "operationId": "UpcAdicionalController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for UpcAdicional content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpcAdicional"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.UpcAdicional"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "upc_adicional"
                ],
                "description": "delete the UpcAdicional",
                "operationId": "UpcAdicionalController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/zona_upc/": {
            "get": {
                "tags": [
                    "zona_upc"
                ],
                "description": "get ZonaUpc",
                "operationId": "ZonaUpcController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ZonaUpc"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "zona_upc"
                ],
                "description": "create ZonaUpc",
                "operationId": "ZonaUpcController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ZonaUpc content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ZonaUpc"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ZonaUpc"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/zona_upc/{id}": {
            "get": {
                "tags": [
                    "zona_upc"
                ],
                "description": "get ZonaUpc by id",
                "operationId": "ZonaUpcController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ZonaUpc"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "zona_upc"
                ],
                "description": "update the ZonaUpc",
                "operationId": "ZonaUpcController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ZonaUpc content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ZonaUpc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ZonaUpc"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "zona_upc"
                ],
                "description": "delete the ZonaUpc",
                "operationId": "ZonaUpcController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        }
    },
    "definitions": {
        ".PruebaPago": {
            "type": "object"
        },
        ".del": {
            "type": "object"
        },
        ".false": {
            "type": "object"
        },
        ".interface{}": {
            "type": "object"
        },
        ".msg": {
            "type": "object"
        },
        "models.Alert": {
            "title": "Alert",
            "type": "object",
            "properties": {
                "Body": {
                    "$ref": "#/definitions/69.0xc4203c3e30.false"
                },
                "Code": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                }
            }
        },
        "models.Aportante": {
            "title": "Aportante",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodArl": {
                    "type": "string"
                },
                "CodDepartamento": {
                    "type": "string"
                },
                "CodMunicipio": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Identificacion": {
                    "type": "string"
                },
                "Nombre": {
                    "type": "string"
                }
            }
        },
        "models.Beneficiarios": {
            "title": "Beneficiarios",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "FechaFin": {
                    "type": "string",
                    "format": "string"
                },
                "FechaInicio": {
                    "type": "string",
                    "format": "string"
                },
                "FechaNacimiento": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumDocumento": {
                    "type": "string"
                },
                "ParametroEstandar": {
                    "type": "integer",
                    "format": "int64"
                },
                "PersonaAsociada": {
                    "type": "string"
                },
                "PrimerApellido": {
                    "type": "string"
                },
                "PrimerNombre": {
                    "type": "string"
                },
                "SegundoApellido": {
                    "type": "string"
                },
                "SegundoNombre": {
                    "type": "string"
                }
            }
        },
        "models.DetalleNovedadSeguridadSocial": {
            "title": "DetalleNovedadSeguridadSocial",
            "type": "object",
            "properties": {
                "ConceptoNominaPorPersona": {
                    "type": "integer",
                    "format": "int64"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.EstadoSeguridadSocial": {
            "title": "EstadoSeguridadSocial",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.Pago": {
            "title": "Pago",
            "type": "object",
            "properties": {
                "DetalleLiquidacion": {
                    "type": "integer",
                    "format": "int64"
                },
                "EntidadPago": {
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "PeriodoPago": {
                    "$ref": "#/definitions/models.PeriodoPago"
                },
                "TipoPago": {
                    "type": "integer",
                    "format": "int64"
                },
                "Valor": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.PeriodoPago": {
            "title": "PeriodoPago",
            "type": "object",
            "properties": {
                "Anio": {
                    "type": "number",
                    "format": "double"
                },
                "EstadoSeguridadSocial": {
                    "$ref": "#/definitions/models.EstadoSeguridadSocial"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Liquidacion": {
                    "type": "integer",
                    "format": "int64"
                },
                "Mes": {
                    "type": "number",
                    "format": "double"
                },
                "TipoLiquidacion": {
                    "type": "string"
                }
            }
        },
        "models.RangoEdadUpc": {
            "title": "RangoEdadUpc",
            "type": "object",
            "properties": {
                "AplicaGenero": {
                    "type": "string"
                },
                "EdadMax": {
                    "type": "number",
                    "format": "double"
                },
                "EdadMin": {
                    "type": "number",
                    "format": "double"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.TipoNovedadSeguridadSocial": {
            "title": "TipoNovedadSeguridadSocial",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NombreConcepto": {
                    "type": "string"
                }
            }
        },
        "models.TipoPago": {
            "title": "TipoPago",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.TipoUpc": {
            "title": "TipoUpc",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "RangoEdadUpc": {
                    "$ref": "#/definitions/models.RangoEdadUpc"
                },
                "Resolucion": {
                    "type": "string"
                },
                "Valor": {
                    "type": "number",
                    "format": "double"
                },
                "Vigencia": {
                    "type": "integer",
                    "format": "int64"
                },
                "ZonaUpc": {
                    "$ref": "#/definitions/models.ZonaUpc"
                }
            }
        },
        "models.TrPeriodoPago": {
            "title": "TrPeriodoPago",
            "type": "object",
            "properties": {
                "Pagos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Pago"
                    }
                },
                "PeriodoPago": {
                    "$ref": "#/definitions/models.PeriodoPago"
                }
            }
        },
        "models.UpcAdicional": {
            "title": "UpcAdicional",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "FechaNacimiento": {
                    "type": "string",
                    "format": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumDocumento": {
                    "type": "string"
                },
                "ParametroEstandar": {
                    "type": "integer",
                    "format": "int64"
                },
                "PersonaAsociada": {
                    "type": "string"
                },
                "PrimerApellido": {
                    "type": "string"
                },
                "PrimerNombre": {
                    "type": "string"
                },
                "SegundoApellido": {
                    "type": "string"
                },
                "SegundoNombre": {
                    "type": "string"
                },
                "TipoUpc": {
                    "$ref": "#/definitions/models.TipoUpc"
                }
            }
        },
        "models.ZonaUpc": {
            "title": "ZonaUpc",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        }
    },
    "tags": [
        {
            "name": "tipo_pago",
            "description": "TipoPagoController operations for TipoPago\n"
        },
        {
            "name": "periodo_pago",
            "description": "PeriodoPagoController operations for PeriodoPago\n"
        },
        {
            "name": "pago",
            "description": "PagoController operations for Pago\n"
        },
        {
            "name": "upc_adicional",
            "description": "UpcAdicionalController operations for UpcAdicional\n"
        },
        {
            "name": "zona_upc",
            "description": "ZonaUpcController operations for ZonaUpc\n"
        },
        {
            "name": "rango_edad_upc",
            "description": "RangoEdadUpcController operations for RangoEdadUpc\n"
        },
        {
            "name": "tipo_upc",
            "description": "TipoUpcController operations for TipoUpc\n"
        },
        {
            "name": "aportante",
            "description": "AportanteController operations for Aportante\n"
        },
        {
            "name": "estado_seguridad_social",
            "description": "EstadoSeguridadSocialController operations for EstadoSeguridadSocial\n"
        },
        {
            "name": "beneficiarios",
            "description": "BeneficiariosController operations for Beneficiarios\n"
        },
        {
            "name": "detalle_novedad_seguridad_social",
            "description": "DetalleNovedadSeguridadSocialController operations for DetalleNovedadSeguridadSocial\n"
        },
        {
            "name": "tipo_novedad_seguridad_social",
            "description": "TipoNovedadSeguridadSocialController operations for TipoNovedadSeguridadSocial\n"
        }
    ]
}